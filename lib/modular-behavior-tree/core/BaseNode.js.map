{"version":3,"sources":["../../src/core/BaseNode.js"],"names":["createUUID","RUNNING","BaseNode","constructor","properties","category","_uuid","_execute","blackboard","tick","isOpen","_start","status","_run","_end","open","start","run","close","end"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,cAAzB;AACA,SAAQC,OAAR,QAAsB,cAAtB;;AAEA,eAAe,MAAMC,QAAN,CAAe;;AAE1BC,gBAAY,EAACC,UAAD,EAAaC,QAAb,KAAyB,EAArC,EAAyC;AACrC,aAAKC,KAAL,GAAaN,YAAb;AACA,aAAKK,QAAL,GAAgBA,YAAY,EAA5B;AACA,aAAKD,UAAL,GAAkBA,cAAc,EAAhC;AACH;;AAED,UAAMG,QAAN,CAAeC,UAAf,EAA2BC,IAA3B,EAAiC;AAC7B,YAAG,CAACA,KAAKC,MAAL,CAAY,IAAZ,CAAJ,EAAuB,MAAM,KAAKC,MAAL,CAAYH,UAAZ,EAAwBC,IAAxB,CAAN;AACvB,YAAIG,SAAS,MAAM,KAAKC,IAAL,CAAUL,UAAV,EAAsBC,IAAtB,CAAnB;AACA,YAAGG,WAAWX,OAAd,EAAuB,MAAM,KAAKa,IAAL,CAAUN,UAAV,EAAsBC,IAAtB,CAAN;AACvB,eAAOG,MAAP;AACH;;AAED,UAAMD,MAAN,CAAaH,UAAb,EAAyBC,IAAzB,EAA+B;AAC3BA,aAAKM,IAAL,CAAU,IAAV;AACA,cAAM,KAAKC,KAAL,CAAWR,UAAX,EAAuBC,IAAvB,CAAN;AACH;;AAED,UAAMI,IAAN,CAAWL,UAAX,EAAuBC,IAAvB,EAA6B;AACzB,eAAO,MAAM,KAAKQ,GAAL,CAAST,UAAT,EAAqBC,IAArB,CAAb;AACH;;AAED,UAAMK,IAAN,CAAWN,UAAX,EAAuBC,IAAvB,EAA6B;AACzBA,aAAKS,KAAL,CAAW,IAAX;AACA,cAAM,KAAKC,GAAL,CAASX,UAAT,EAAqBC,IAArB,CAAN;AACH;;AAED,UAAMO,KAAN,CAAYR,UAAZ,EAAwBC,IAAxB,EAA8B,CAAE;;AAEhC,UAAMQ,GAAN,CAAUT,UAAV,EAAsBC,IAAtB,EAA4B,CAAE;;AAE9B,UAAMU,GAAN,CAAUX,UAAV,EAAsBC,IAAtB,EAA4B,CAAE;;AAjCJ","file":"BaseNode.js","sourcesContent":["import {createUUID} from '../functions'\nimport {RUNNING} from '../constants'\n\nexport default class BaseNode {\n\n    constructor({properties, category} = {}) {\n        this._uuid = createUUID()\n        this.category = category || '';\n        this.properties = properties || {}\n    }\n\n    async _execute(blackboard, tick) {\n        if(!tick.isOpen(this)) await this._start(blackboard, tick)\n        let status = await this._run(blackboard, tick)\n        if(status !== RUNNING) await this._end(blackboard, tick)\n        return status\n    }\n\n    async _start(blackboard, tick) {\n        tick.open(this)\n        await this.start(blackboard, tick)\n    }\n\n    async _run(blackboard, tick) {\n        return await this.run(blackboard, tick)\n    }\n\n    async _end(blackboard, tick) {\n        tick.close(this)\n        await this.end(blackboard, tick)\n    }\n\n    async start(blackboard, tick) {}\n\n    async run(blackboard, tick) {}\n\n    async end(blackboard, tick) {}\n\n}\n"]}